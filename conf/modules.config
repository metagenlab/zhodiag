/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
    ]
    withName: MINIMAP2HOST {
        ext.args = '' 
    }
    withName: FASTP {
        ext.args = 'entropy=0.8'
    }
    withName: FASTP {
        ext.args = '--low_complexity_filter'
    }
    withName: MINIMAP2HOST {
        publishDir = [
            path: { "${params.outdir}/minimap2/hs1" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: MINIMAP2_ALL {
        ext.args = '--secondary=no'
        publishDir = [
            path: { 
                def ref_file = new File(params.reference_fasta)
                def ref_name = ref_file.getName().replaceAll(/\.(fna|fa|fasta|mmi)(\.gz)?$/, '')
                "${params.outdir}/minimap2/${ref_name}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: MINIMAP2_SORT {
        publishDir = [
            path: { 
                def ref_file = new File(params.reference_fasta)
                def ref_name = ref_file.getName().replaceAll(/\.(fna|fa|fasta|mmi)(\.gz)?$/, '')
                "${params.outdir}/minimap2/${ref_name}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: MINIMAP2_DEPTH {
        publishDir = [
            path: { 
                def ref_file = new File(params.reference_fasta)
                def ref_name = ref_file.getName().replaceAll(/\.(fna|fa|fasta|mmi)(\.gz)?$/, '')
                "${params.outdir}/minimap2/${ref_name}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: MINIMAP2_ANNOTATE_PAF {
        publishDir = [
            path: { 
                def ref_file = new File(params.reference_fasta)
                def ref_name = ref_file.getName().replaceAll(/\.(fna|fa|fasta|mmi)(\.gz)?$/, '')
                "${params.outdir}/minimap2/${ref_name}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: MINIMAP2_CONCAT_PAFS {
        publishDir = [
            path: { 
                def ref_file = new File(params.reference_fasta)
                def ref_name = ref_file.getName().replaceAll(/\.(fna|fa|fasta|mmi)(\.gz)?$/, '')
                "${params.outdir}/plots_and_tables/minimap2/${ref_name}/mapq${params.mapq_cutoff}_cov${params.coverage_cutoff}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: KRAKEN2_KRAKEN2 {
        publishDir = [
            path: { 
                def ref_file = new File(params.kraken2_db)
                def ref_name = ref_file.getName().replaceAll(/\.(fna|fa|fasta)(\.gz)?$/, '')
                "${params.outdir}/kraken2/${ref_name}/conf${params.kraken2_confidence}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: KRAKEN2_COMBINE_REPORTS {
        publishDir = [
            path: { 
                def ref_file = new File(params.kraken2_db)
                def ref_name = ref_file.getName().replaceAll(/\.(fna|fa|fasta)(\.gz)?$/, '')
                "${params.outdir}/plots_and_tables/kraken2/${ref_name}/conf${params.kraken2_confidence}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: PLOTS_KRAKEN2 {
        publishDir = [
            path: { 
                def ref_file = new File(params.kraken2_db)
                def ref_name = ref_file.getName().replaceAll(/\.(fna|fa|fasta)(\.gz)?$/, '')
                "${params.outdir}/plots_and_tables/kraken2/${ref_name}/conf${params.kraken2_confidence}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: KRAKEN2_TAXONOMY {
        publishDir = [
            path: { 
                def ref_file = new File(params.kraken2_db)
                def ref_name = ref_file.getName().replaceAll(/\.(fna|fa|fasta)(\.gz)?$/, '')
                "${params.outdir}/plots_and_tables/kraken2/${ref_name}/conf${params.kraken2_confidence}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: MINIMAP2_TAXONOMY {
        publishDir = [
            path: { 
                def ref_file = new File(params.reference_fasta)
                def ref_name = ref_file.getName().replaceAll(/\.(fna|fa|fasta|mmi)(\.gz)?$/, '')
                "${params.outdir}/plots_and_tables/minimap2/${ref_name}/mapq${params.mapq_cutoff}_cov${params.coverage_cutoff}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: PLOTS_MINIMAP2 {
        publishDir = [
            path: { 
                def ref_file = new File(params.reference_fasta)
                def ref_name = ref_file.getName().replaceAll(/\.(fna|fa|fasta|mmi)(\.gz)?$/, '')
                "${params.outdir}/plots_and_tables/minimap2/${ref_name}/mapq${params.mapq_cutoff}_cov${params.coverage_cutoff}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: MANUAL_CANDIDATES {
        publishDir = [
            path: { "${params.outdir}/minimap2/candidates/${params.candidates}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: MINIMAP_CANDIDATES_MANUAL {
        ext.args = '--secondary=no'
        publishDir = [
            path: { "${params.outdir}/minimap2/candidates/${params.candidates}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: CANDIDATES_SAMTOOLS_SORT_MANUAL {
        publishDir = [
            path: { "${params.outdir}/minimap2/candidates/${params.candidates}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: CANDIDATES_SAMTOOLS_DEPTH_MANUAL {
        publishDir = [
            path: { "${params.outdir}/minimap2/candidates/${params.candidates}" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: AUTOMATIC_CANDIDATES {
        ext.args = '--exclude'
        publishDir = [
            path: { "${params.outdir}/minimap2/candidates/" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: MINIMAP_CANDIDATES_AUTO {
        ext.args = '--secondary=no'
        publishDir = [
            path: { "${params.outdir}/minimap2/candidates/" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: MINIMAP_FILTER_AUTO {
        ext.args = '-q 20'
        publishDir = [
            path: { "${params.outdir}/minimap2/candidates/" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: CANDIDATES_SAMTOOLS_SORT_AUTO {
        publishDir = [
            path: { "${params.outdir}/minimap2/candidates/" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: CANDIDATES_SAMTOOLS_DEPTH_AUTO {
        ext.args = '-a'
        publishDir = [
            path: { "${params.outdir}/minimap2/candidates/" },
            mode: params.publish_dir_mode,
        ]
    }
}
// * '-B12 -O18,36 -E4,2 -A1 -s 80 --secondary=no --score-N 0'
